{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "accordionHeaderClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex'"
            },
            {
                "name": "accordionItemClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-b last:border-b-0'"
            },
            {
                "name": "accordionTriggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex flex-1 items-start justify-between gap-4 py-4 text-left text-sm font-medium outline-none hover:underline disabled:pointer-events-none disabled:opacity-50'"
            },
            {
                "name": "arrowClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "avatarClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'inline-flex items-center justify-center align-middle overflow-hidden select-none rounded-full w-12 h-12'"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"padding: 50px; display: flex; justify-content: center\">\n      <div radianHoverCard>\n        <a radianHoverCardTrigger href=\"/\" class=\"${triggerClasses}\">\n          trigger\n        </a>\n        <div *radianHoverCardPresence radianHoverCardPortal>\n          <div radianHoverCardPanel>\n            <div radianHoverCardContent class=\"${contentClasses}\" sideOffset=\"5\">\n              <radian-arrow radianHoverCardArrow class=\"${arrowClasses}\" width=\"20\" height=\"10\" />\n              ${content}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "BrokenImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'With Broken Image',\n  render: () => ({\n    template: `\n    <div radianAvatar class=\"${avatarClasses}\">\n      <img radianAvatarImage class=\"${imageClasses}\" alt=\"John Smith\" src=\"${srcBroken}\" />\n      <div *radianAvatarFallback class=\"${fallbackClasses}\">\n        JS\n      </div>\n    </div>\n    `,\n  }),\n}"
            },
            {
                "name": "collapsibleClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t border-b'"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: [\n    '@storybook/addon-docs',\n    {\n      name: '@storybook/addon-styling-webpack',\n      options: {\n        rules: [\n          // Replaces existing CSS rules to support PostCSS\n          {\n            test: /\\.css$/,\n            use: [\n              'style-loader',\n              {\n                loader: 'css-loader',\n                options: { importLoaders: 1 },\n              },\n              {\n                // Gets options from `postcss.config.js` in your project root\n                loader: 'postcss-loader',\n                options: { implementation: require.resolve('postcss') },\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n}"
            },
            {
                "name": "ContainedTextSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"padding: 50px; display: flex; justify-content: center\">\n      <div radianHoverCard>\n        <a radianHoverCardTrigger href=\"/\" class=\"${triggerClasses}\">\n          trigger\n        </a>\n        <div *radianHoverCardPresence radianHoverCardPortal>\n          <div radianHoverCardPanel>\n            <div radianHoverCardContent class=\"${contentClasses}\" sideOffset=\"5\">\n              <radian-arrow radianHoverCardArrow class=\"${arrowClasses}\" width=\"20\" height=\"10\" />\n              <div style=\"max-width: 400px\">\n                Text selections will be contained within the content. While a selection is active\n                the content will not dismiss unless the selection is cleared or an outside\n                interaction is performed.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    `,\n  }),\n}"
            },
            {
                "name": "content",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<div style=\"max-width: 400px; display: flex; align-items: center\">\n      <div style=\"width: 60px; height: 60px; background-color: red; border-radius: 100px\"></div>\n      <div style=\"margin-left: 14px\">\n        <div style=\"width: 200px; background-color: red; height: 14px; border-radius: 100px\"></div>\n        <div\n          style=\"width: 150px; background-color: red; height: 14px; border-radius: 100px; marginTop: 10px;\"\n        ></div>\n      </div>\n    </div>`"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg sm:max-w-lg'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white border border-black'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg sm:max-w-lg'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white border border-black'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white border border-black'"
            },
            {
                "name": "contentClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-white border border-black'"
            },
            {
                "name": "Controlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <button type=\"button\" (click)=\"open.set(!open())\">Delete</button>\n\n      <ng-container radianAlertDialog [(open)]=\"open\">\n        <div *radianAlertDialogPresence radianAlertDialogPortal>\n          <div class=\"${overlayClasses}\" radianAlertDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianAlertDialogContent>\n            <h3 radianAlertDialogTitle>Are you sure?</h3>\n            <p radianAlertDialogDescription>There is no going back!</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianAlertDialogAction>Delete</button>\n              <button radianAlertDialogCancel>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
            },
            {
                "name": "Controlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      checked: signal(true),\n    },\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox [(checked)]=\"checked\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
            },
            {
                "name": "Controlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <div radianCollapsible class=\"${collapsibleClasses}\" [(open)]=\"open\">\n        <button radianCollapsibleTrigger class=\"${triggerClasses}\">Trigger</button>\n        <div class=\"${contentClasses}\" *radianCollapsiblePresence radianCollapsibleContent>\n          Content\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Controlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <button type=\"button\" (click)=\"open.set(!open())\">Delete</button>\n\n      <ng-container radianDialog [(open)]=\"open\">\n        <div *radianDialogPresence radianDialogPortal>\n          <div class=\"${overlayClasses}\" radianDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianDialogContent>\n            <h3 radianDialogTitle>This is a dialog</h3>\n            <p radianDialogDescription>It is very useful.</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianDialogClose>Close</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
            },
            {
                "name": "Custom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/arrow/arrow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <radian-arrow>\n            <div\n              style=\"width: 20px; height: 10px; borderBottomLeftRadius: 10px; borderBottomRightRadius: 10px; backgroundColor: tomato\"\n            ></div>\n      </radian-arrow>\n    `,\n  }),\n}"
            },
            {
                "name": "CustomRatios",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n          <div class=\"flex gap-6\">\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"1 / 2\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"16 / 9\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"2 / 1\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n          </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"width: 500px\">\n        <div radianAspectRatio>\n          <div radianAspectRatioContent class=\"flex items-center justify-center bg-red-500 text-white\">\n            <h1>Default ratio (1/1)</h1>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accessible-icon/accessible-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  tags: ['!dev'],\n  render: () => ({\n    template: `\n    <button type=\"button\">\n      <svg dataRadianAccessibleIcon viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\">\n        <path d=\"M2 30 L30 2 M30 30 L2 2\" />\n      </svg>\n      <div radianAccessibleIconLabel>Close</div>\n    </button>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianContextMenu>\n        <div class=\"${triggerClasses}\" radianContextMenuTrigger></div>\n\n        <div *radianContextMenuPresence radianContextMenuPortal>\n          <div radianContextMenuPanel>\n            <div radianContextMenuContent class=\"${contentClasses}\">\n              <div radianContextMenuGroup>\n                <div radianContextMenuLabel class=\"${labelClasses}\">Actions</div>\n                <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Undo\n                </div>\n                <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Redo\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextSubMenu>\n                <div radianContextSubMenuTrigger>Submenu →</div>\n                <div *radianContextMenuPresence>\n                  <div radianContextSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                    <div radianContextSubMenuContent class=\"${contentClasses}\">\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextMenuItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n              <div radianContextMenuCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                Active\n                <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextMenuRadioGroup [(value)]=\"selection\">\n                <div radianContextMenuLabel class=\"${labelClasses}\">Selection</div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"first\">\n                  First\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"second\">\n                  Second\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"third\">\n                  Third\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianDropdownMenu>\n        <button class=\"${triggerClasses}\" radianDropdownMenuTrigger>Menu</button>\n\n        <div *radianDropdownMenuPresence radianDropdownMenuPortal>\n          <div radianDropdownMenuPanel>\n            <div radianDropdownMenuContent class=\"${contentClasses}\">\n              <div radianDropdownMenuGroup>\n                <div radianDropdownMenuLabel class=\"${labelClasses}\">Actions</div>\n                <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Undo\n                </div>\n                <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Redo\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownSubMenu>\n                <div radianDropdownSubMenuTrigger>Submenu →</div>\n                <div *radianDropdownMenuPresence>\n                  <div radianDropdownSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                    <div radianDropdownSubMenuContent class=\"${contentClasses}\">\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownMenuItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n              <div radianDropdownMenuCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                Active\n                <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownMenuRadioGroup [(value)]=\"selection\">\n                <div radianDropdownMenuLabel class=\"${labelClasses}\">Selection</div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"first\">\n                  First\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"second\">\n                  Second\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"third\">\n                  Third\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/label/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  tags: ['!dev'],\n  render: () => ({\n    template: `\n      <label radianLabel class=\"flex gap-2\">\n        Label\n        <input class=\"border border-black\" />\n      </label>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div class=\"flex gap-2\" radianMenubar>\n        <div radianMenubarMenu>\n          <button class=\"${triggerClasses}\" radianMenubarTrigger>Menu</button>\n\n          <div *radianMenubarPresence radianMenubarPortal>\n            <div radianMenubarPanel>\n              <div radianMenubarContent class=\"${contentClasses}\">\n                <div radianMenubarGroup>\n                  <div radianMenubarLabel class=\"${labelClasses}\">Actions</div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Undo\n                  </div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Redo\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarSubMenu>\n                  <div radianMenubarSubMenuTrigger>Submenu →</div>\n                  <div *radianMenubarPresence>\n                    <div radianMenubarSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                      <div radianMenubarSubMenuContent class=\"${contentClasses}\">\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n                <div radianMenubarCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                  Active\n                  <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarRadioGroup [(value)]=\"selection\">\n                  <div radianMenubarLabel class=\"${labelClasses}\">Selection</div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"first\">\n                    First\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"second\">\n                    Second\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"third\">\n                    Third\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div radianMenubarMenu>\n          <button class=\"${triggerClasses}\" radianMenubarTrigger>Menu</button>\n\n          <div *radianMenubarPresence radianMenubarPortal>\n            <div radianMenubarPanel>\n              <div radianMenubarContent class=\"${contentClasses}\">\n                <div radianMenubarGroup>\n                  <div radianMenubarLabel class=\"${labelClasses}\">Actions</div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Undo\n                  </div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Redo\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarSubMenu>\n                  <div radianMenubarSubMenuTrigger>Submenu →</div>\n                  <div *radianMenubarPresence>\n                    <div radianMenubarSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                      <div radianMenubarSubMenuContent class=\"${contentClasses}\">\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n                <div radianMenubarCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                  Active\n                  <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarRadioGroup [(value)]=\"selection\">\n                  <div radianMenubarLabel class=\"${labelClasses}\">Selection</div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"first\">\n                    First\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"second\">\n                    Second\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"third\">\n                    Third\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Demo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianNavigationMenu>\n        <div radianNavigationMenuList>\n          <div radianNavigationMenuItem>\n            <div radianNavigationMenuTrigger>Links</div>\n            <div *radianNavigationMenuContentPresence>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "fallbackClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'w-full h-full flex items-center justify-center bg-gray-500 text-black'"
            },
            {
                "name": "footerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex gap-2 justify-end'"
            },
            {
                "name": "footerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex gap-2 justify-end'"
            },
            {
                "name": "Forms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      checked: signal(true),\n    },\n    moduleMetadata: { imports: [FormsModule] },\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox [ngModel]=\"checked()\" (ngModelChange)=\"checked.set($event)\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
            },
            {
                "name": "image",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`<img\n    src=\"https://images.unsplash.com/photo-1605030753481-bb38b08c384a?&auto=format&fit=crop&w=400&q=80\"\n    alt=\"A house in a forest\"\n    style=\"object-fit: cover; width: 100%; height: 100%\"\n  />`"
            },
            {
                "name": "imageClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'w-full h-full object-cover'"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox checked=\"indeterminate\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
            },
            {
                "name": "indicatorClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'bg-pink-500 block w-full h-1 data-[state=checked]:h-full'"
            },
            {
                "name": "InsideLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox>\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
            },
            {
                "name": "itemClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
            },
            {
                "name": "itemClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
            },
            {
                "name": "itemClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
            },
            {
                "name": "itemClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
            },
            {
                "name": "labelClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'text-sm text-gray-700'"
            },
            {
                "name": "labelClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'text-sm text-gray-700'"
            },
            {
                "name": "labelClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'text-sm text-gray-700'"
            },
            {
                "name": "labelClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'text-sm text-gray-700'"
            },
            {
                "name": "LabelFor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <label for=\"check\">\n        Label\n      </label>\n\n        <div radianCheckbox class=\"ml-2 inline-block\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger id=\"check\">\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n    `,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accessible-icon/accessible-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianAccessibleIcon>",
                "defaultValue": "{\n  title: 'Accessible Icon',\n  component: RadianAccessibleIcon,\n  subcomponents: {\n    RadianAccessibleIconLabel,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAccessibleIconLabel],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianAccordion>",
                "defaultValue": "{\n  title: 'Accordion',\n  component: RadianAccordion,\n  subcomponents: {\n    RadianAccordionContent,\n    RadianAccordionHeader,\n    RadianAccordionItem,\n    RadianAccordionPresence,\n    RadianAccordionTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianAccordionContent,\n        RadianAccordionHeader,\n        RadianAccordionItem,\n        RadianAccordionPresence,\n        RadianAccordionTrigger,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianAlertDialog>",
                "defaultValue": "{\n  title: 'Alert Dialog',\n  component: RadianAlertDialog,\n  subcomponents: {\n    RadianAlertDialogAction,\n    RadianAlertDialogCancel,\n    RadianAlertDialogContent,\n    RadianAlertDialogDescription,\n    RadianAlertDialogOverlay,\n    RadianAlertDialogPortal,\n    RadianAlertDialogPresence,\n    RadianAlertDialogTitle,\n    RadianAlertDialogTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianAlertDialogAction,\n        RadianAlertDialogCancel,\n        RadianAlertDialogContent,\n        RadianAlertDialogDescription,\n        RadianAlertDialogOverlay,\n        RadianAlertDialogPortal,\n        RadianAlertDialogPresence,\n        RadianAlertDialogTitle,\n        RadianAlertDialogTrigger,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/arrow/arrow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianArrow>",
                "defaultValue": "{\n  title: 'Arrow',\n  component: RadianArrow,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianAspectRatio>",
                "defaultValue": "{\n  title: 'Aspect Ratio',\n  component: RadianAspectRatio,\n  subcomponents: {\n    RadianAspectRatioContent,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAspectRatioContent],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianAvatar>",
                "defaultValue": "{\n  title: 'Avatar',\n  component: RadianAvatar,\n  subcomponents: {\n    RadianAvatarFallback,\n    RadianAvatarImage,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAvatarFallback, RadianAvatarImage],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianCheckbox>",
                "defaultValue": "{\n  title: 'Checkbox',\n  component: RadianCheckbox,\n  subcomponents: {\n    RadianCheckboxIndicator,\n    RadianCheckboxIndicatorPresence,\n    RadianCheckboxInput,\n    RadianCheckboxTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianCheckboxIndicator,\n        RadianCheckboxIndicatorPresence,\n        RadianCheckboxInput,\n        RadianCheckboxTrigger,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianCollapsible>",
                "defaultValue": "{\n  title: 'Collapsible',\n  component: RadianCollapsible,\n  subcomponents: {\n    RadianCollapsibleContent,\n    RadianCollapsiblePresence,\n    RadianCollapsibleTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianCollapsibleContent,\n        RadianCollapsiblePresence,\n        RadianCollapsibleTrigger,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianContextMenu>",
                "defaultValue": "{\n  title: 'Context Menu',\n  component: RadianContextMenu,\n  subcomponents: {\n    RadianContextMenuArrow,\n    RadianContextMenuCheckboxItem,\n    RadianContextMenuContent,\n    RadianContextMenuGroup,\n    RadianContextMenuItem,\n    RadianContextMenuItemIndicator,\n    RadianContextMenuItemIndicatorPresence,\n    RadianContextMenuLabel,\n    RadianContextMenuPanel,\n    RadianContextMenuPortal,\n    RadianContextMenuPresence,\n    RadianContextMenuRadioGroup,\n    RadianContextMenuRadioItem,\n    RadianContextMenuSeparator,\n    RadianContextMenuTrigger,\n    RadianContextSubMenu,\n    RadianContextSubMenuContent,\n    RadianContextSubMenuPanel,\n    RadianContextSubMenuTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianContextMenuArrow,\n        RadianContextMenuCheckboxItem,\n        RadianContextMenuContent,\n        RadianContextMenuGroup,\n        RadianContextMenuItem,\n        RadianContextMenuItemIndicator,\n        RadianContextMenuItemIndicatorPresence,\n        RadianContextMenuLabel,\n        RadianContextMenuPanel,\n        RadianContextMenuPortal,\n        RadianContextMenuPresence,\n        RadianContextMenuRadioGroup,\n        RadianContextMenuRadioItem,\n        RadianContextMenuSeparator,\n        RadianContextMenuTrigger,\n        RadianContextSubMenu,\n        RadianContextSubMenuContent,\n        RadianContextSubMenuPanel,\n        RadianContextSubMenuTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianDialog>",
                "defaultValue": "{\n  title: ' Dialog',\n  component: RadianDialog,\n  subcomponents: {\n    RadianDialogClose,\n    RadianDialogContent,\n    RadianDialogDescription,\n    RadianDialogOverlay,\n    RadianDialogPortal,\n    RadianDialogPresence,\n    RadianDialogTitle,\n    RadianDialogTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianDialogClose,\n        RadianDialogContent,\n        RadianDialogDescription,\n        RadianDialogOverlay,\n        RadianDialogPortal,\n        RadianDialogPresence,\n        RadianDialogTitle,\n        RadianDialogTrigger,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianDropdownMenu>",
                "defaultValue": "{\n  title: 'Dropdown Menu',\n  component: RadianDropdownMenu,\n  subcomponents: {\n    RadianDropdownMenuArrow,\n    RadianDropdownMenuCheckboxItem,\n    RadianDropdownMenuContent,\n    RadianDropdownMenuGroup,\n    RadianDropdownMenuItem,\n    RadianDropdownMenuItemIndicator,\n    RadianDropdownMenuItemIndicatorPresence,\n    RadianDropdownMenuLabel,\n    RadianDropdownMenuPanel,\n    RadianDropdownMenuPortal,\n    RadianDropdownMenuPresence,\n    RadianDropdownMenuRadioGroup,\n    RadianDropdownMenuRadioItem,\n    RadianDropdownMenuSeparator,\n    RadianDropdownMenuTrigger,\n    RadianDropdownSubMenu,\n    RadianDropdownSubMenuContent,\n    RadianDropdownSubMenuPanel,\n    RadianDropdownSubMenuTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianDropdownMenuArrow,\n        RadianDropdownMenuCheckboxItem,\n        RadianDropdownMenuContent,\n        RadianDropdownMenuGroup,\n        RadianDropdownMenuItem,\n        RadianDropdownMenuItemIndicator,\n        RadianDropdownMenuItemIndicatorPresence,\n        RadianDropdownMenuLabel,\n        RadianDropdownMenuPanel,\n        RadianDropdownMenuPortal,\n        RadianDropdownMenuPresence,\n        RadianDropdownMenuRadioGroup,\n        RadianDropdownMenuRadioItem,\n        RadianDropdownMenuSeparator,\n        RadianDropdownMenuTrigger,\n        RadianDropdownSubMenu,\n        RadianDropdownSubMenuContent,\n        RadianDropdownSubMenuPanel,\n        RadianDropdownSubMenuTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianHoverCard>",
                "defaultValue": "{\n  title: 'Hover Card',\n  component: RadianHoverCard,\n  subcomponents: {\n    RadianHoverCardArrow,\n    RadianHoverCardContent,\n    RadianHoverCardPanel,\n    RadianHoverCardPortal,\n    RadianHoverCardPresence,\n    RadianHoverCardTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianHoverCardArrow,\n        RadianHoverCardContent,\n        RadianHoverCardPanel,\n        RadianHoverCardPortal,\n        RadianHoverCardPresence,\n        RadianHoverCardTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/label/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianLabel>",
                "defaultValue": "{\n  title: 'Label',\n  component: RadianLabel,\n  tags: ['autodocs'],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianMenubar>",
                "defaultValue": "{\n  title: 'Menubar',\n  component: RadianMenubar,\n  subcomponents: {\n    RadianMenubarArrow,\n    RadianMenubarCheckboxItem,\n    RadianMenubarContent,\n    RadianMenubarGroup,\n    RadianMenubarItem,\n    RadianMenubarItemIndicator,\n    RadianMenubarItemIndicatorPresence,\n    RadianMenubarLabel,\n    RadianMenubarMenu,\n    RadianMenubarPanel,\n    RadianMenubarPortal,\n    RadianMenubarPresence,\n    RadianMenubarRadioGroup,\n    RadianMenubarRadioItem,\n    RadianMenubarSeparator,\n    RadianMenubarSubMenu,\n    RadianMenubarSubMenuContent,\n    RadianMenubarSubMenuPanel,\n    RadianMenubarSubMenuTrigger,\n    RadianMenubarTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianMenubarArrow,\n        RadianMenubarCheckboxItem,\n        RadianMenubarContent,\n        RadianMenubarGroup,\n        RadianMenubarItem,\n        RadianMenubarItemIndicator,\n        RadianMenubarItemIndicatorPresence,\n        RadianMenubarLabel,\n        RadianMenubarMenu,\n        RadianMenubarPanel,\n        RadianMenubarPortal,\n        RadianMenubarPresence,\n        RadianMenubarRadioGroup,\n        RadianMenubarRadioItem,\n        RadianMenubarSeparator,\n        RadianMenubarSubMenu,\n        RadianMenubarSubMenuContent,\n        RadianMenubarSubMenuPanel,\n        RadianMenubarSubMenuTrigger,\n        RadianMenubarTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadianNavigationMenu>",
                "defaultValue": "{\n  title: 'Navigation Menu',\n  component: RadianNavigationMenu,\n  subcomponents: {\n    RadianNavigationMenuContent,\n    RadianNavigationMenuContentPresence,\n    RadianNavigationMenuIndicator,\n    RadianNavigationMenuIndicatorPresence,\n    RadianNavigationMenuItem,\n    RadianNavigationMenuLink,\n    RadianNavigationMenuList,\n    RadianNavigationMenuSub,\n    RadianNavigationMenuTrack,\n    RadianNavigationMenuTrigger,\n    RadianNavigationMenuViewport,\n    RadianNavigationMenuViewportOutlet,\n    RadianNavigationMenuViewportPortal,\n    RadianNavigationMenuViewportPresence,\n    RadianNavigationMenuViewportProxy,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianNavigationMenuContent,\n        RadianNavigationMenuContentPresence,\n        RadianNavigationMenuIndicator,\n        RadianNavigationMenuIndicatorPresence,\n        RadianNavigationMenuItem,\n        RadianNavigationMenuLink,\n        RadianNavigationMenuList,\n        RadianNavigationMenuSub,\n        RadianNavigationMenuTrack,\n        RadianNavigationMenuTrigger,\n        RadianNavigationMenuViewport,\n        RadianNavigationMenuViewportOutlet,\n        RadianNavigationMenuViewportPortal,\n        RadianNavigationMenuViewportPresence,\n        RadianNavigationMenuViewportProxy,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "MultipleControlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Multiple - Controlled',\n  render: () => ({\n    props: {\n      active: signal('one'),\n    },\n    template: `\n      <div radianAccordion\n        multiple\n        [(value)]=\"active\"\n      >\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
            },
            {
                "name": "MultipleUncontrolled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Multiple - Uncontrolled',\n  render: () => ({\n    template: `\n      <div class=\"${accordionItemClasses}\" radianAccordion multiple>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
            },
            {
                "name": "overlayClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'fixed inset-0 z-10 bg-black/50'"
            },
            {
                "name": "overlayClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'fixed inset-0 z-10 bg-black/50'"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {},\n}"
            },
            {
                "name": "separatorClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t border-black my-2'"
            },
            {
                "name": "separatorClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t border-black my-2'"
            },
            {
                "name": "separatorClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t border-black my-2'"
            },
            {
                "name": "separatorClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'border-t border-black my-2'"
            },
            {
                "name": "SingleCollapsible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Single - Collapsible',\n  render: () => ({\n    template: `\n      <div radianAccordion value=\"one\" collapsible>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
            },
            {
                "name": "SingleControlled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Single - Controlled',\n  render: () => ({\n    props: {\n      active: signal('one'),\n    },\n    template: `\n      <div radianAccordion\n\n        [(value)]=\"active\"\n      >\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
            },
            {
                "name": "SingleUncontrolled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'Single - Uncontrolled',\n  render: () => ({\n    template: `\n      <div class=\"${accordionItemClasses}\" radianAccordion>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/arrow/arrow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex gap-4\">\n        <radian-arrow style=\"vertical-align: middle\" width=\"40\" height=\"10\" />\n        <radian-arrow style=\"vertical-align: middle\" width=\"50\" height=\"30\" />\n        <radian-arrow style=\"vertical-align: middle\" width=\"20\" height=\"100\" />\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "src",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://picsum.photos/id/1005/400/400'"
            },
            {
                "name": "srcBroken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://broken.link.com/broken-pic.jpg'"
            },
            {
                "name": "Styled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/arrow/arrow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <radian-arrow style=\"vertical-align: middle; fill: crimson\" width=\"20\" height=\"10\" />\n    `,\n  }),\n}"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'align-middle border border-black w-8 h-8 p-1 data-disabled:opacity-30 focus:outline-none focus:border-pink-500'"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'flex flex-1 items-start justify-between gap-4 py-4 text-left text-sm font-medium outline-none hover:underline disabled:pointer-events-none disabled:opacity-50'"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'w-8 h-8 border border-black'"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "triggerClasses",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "''"
            },
            {
                "name": "Uncontrolled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: () => ({\n    template: `\n      <ng-container radianAlertDialog>\n        <button radianAlertDialogTrigger>Delete</button>\n\n        <div *radianAlertDialogPresence radianAlertDialogPortal>\n          <div class=\"${overlayClasses}\" radianAlertDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianAlertDialogContent>\n            <h3 radianAlertDialogTitle>Are you sure?</h3>\n            <p radianAlertDialogDescription>There is no going back!</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianAlertDialogAction>Delete</button>\n              <button radianAlertDialogCancel>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
            },
            {
                "name": "Uncontrolled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div radianCollapsible class=\"${collapsibleClasses}\">\n        <button radianCollapsibleTrigger class=\"${triggerClasses}\">Trigger</button>\n        <div class=\"${contentClasses}\" *radianCollapsiblePresence radianCollapsibleContent>\n          Content\n        </div>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Uncontrolled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: () => ({\n    template: `\n      <ng-container radianDialog>\n        <button radianDialogTrigger>Open</button>\n\n        <div *radianDialogPresence radianDialogPortal>\n          <div class=\"${overlayClasses}\" radianDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianDialogContent>\n            <h3 radianDialogTitle>This is a dialog</h3>\n            <p radianDialogDescription>It is very useful.</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianDialogClose>Close</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
            },
            {
                "name": "WorkingImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  name: 'With Working Image',\n  render: () => ({\n    template: `\n    <div radianAvatar class=\"${avatarClasses}\">\n      <img radianAvatarImage class=\"${imageClasses}\" alt=\"John Smith\" src=\"${src}\" />\n      <div *radianAvatarFallback delayMs=\"300\" class=\"${fallbackClasses}\">\n        JS\n      </div>\n    </div>\n    `,\n  }),\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianAccessibleIcon>",
                "file": "radian/accessible-icon/accessible-icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianAccordion>",
                "file": "radian/accordion/accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianAlertDialog>",
                "file": "radian/alert-dialog/alert-dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianArrow>",
                "file": "radian/arrow/arrow.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianAspectRatio>",
                "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianAvatar>",
                "file": "radian/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianCheckbox>",
                "file": "radian/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianCollapsible>",
                "file": "radian/collapsible/collapsible.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianContextMenu>",
                "file": "radian/context-menu/context-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianDialog>",
                "file": "radian/dialog/dialog.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianDropdownMenu>",
                "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianHoverCard>",
                "file": "radian/hover-card/hover-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianLabel>",
                "file": "radian/label/label.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianMenubar>",
                "file": "radian/menubar/menubar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadianNavigationMenu>",
                "file": "radian/navigation-menu/navigation-menu.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "radian/accordion/accordion.stories.ts": [
                {
                    "name": "accordionHeaderClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex'"
                },
                {
                    "name": "accordionItemClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-b last:border-b-0'"
                },
                {
                    "name": "accordionTriggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex flex-1 items-start justify-between gap-4 py-4 text-left text-sm font-medium outline-none hover:underline disabled:pointer-events-none disabled:opacity-50'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianAccordion>",
                    "defaultValue": "{\n  title: 'Accordion',\n  component: RadianAccordion,\n  subcomponents: {\n    RadianAccordionContent,\n    RadianAccordionHeader,\n    RadianAccordionItem,\n    RadianAccordionPresence,\n    RadianAccordionTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianAccordionContent,\n        RadianAccordionHeader,\n        RadianAccordionItem,\n        RadianAccordionPresence,\n        RadianAccordionTrigger,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "MultipleControlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Multiple - Controlled',\n  render: () => ({\n    props: {\n      active: signal('one'),\n    },\n    template: `\n      <div radianAccordion\n        multiple\n        [(value)]=\"active\"\n      >\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
                },
                {
                    "name": "MultipleUncontrolled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Multiple - Uncontrolled',\n  render: () => ({\n    template: `\n      <div class=\"${accordionItemClasses}\" radianAccordion multiple>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
                },
                {
                    "name": "SingleCollapsible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Single - Collapsible',\n  render: () => ({\n    template: `\n      <div radianAccordion value=\"one\" collapsible>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
                },
                {
                    "name": "SingleControlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Single - Controlled',\n  render: () => ({\n    props: {\n      active: signal('one'),\n    },\n    template: `\n      <div radianAccordion\n\n        [(value)]=\"active\"\n      >\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
                },
                {
                    "name": "SingleUncontrolled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'Single - Uncontrolled',\n  render: () => ({\n    template: `\n      <div class=\"${accordionItemClasses}\" radianAccordion>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"one\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>One</button>\n          </h3>\n          <div radianAccordionContent>\n            Per erat orci nostra luctus sociosqu mus risus penatibus, duis elit vulputate viverra\n            integer ullamcorper congue curabitur sociis, nisi malesuada scelerisque quam suscipit\n            habitant sed.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"two\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Two</button>\n          </h3>\n          <div radianAccordionContent>\n            Cursus sed mattis commodo fermentum conubia ipsum pulvinar sagittis, diam eget bibendum\n            porta nascetur ac dictum, leo tellus dis integer platea ultrices mi.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"three\" disabled>\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Three (disabled)</button>\n          </h3>\n          <div radianAccordionContent>\n            Sociis hac sapien turpis conubia sagittis justo dui, inceptos penatibus feugiat\n            himenaeos euismod magna, nec tempor pulvinar eu etiam mattis.\n          </div>\n        </div>\n        <div class=\"${accordionItemClasses}\" radianAccordionItem value=\"four\">\n          <h3 class=\"${accordionHeaderClasses}\" radianAccordionHeader>\n            <button class=\"${accordionTriggerClasses}\" radianAccordionTrigger>Four</button>\n          </h3>\n          <div radianAccordionContent>\n            Odio placerat <a href=\"#\">quisque</a> sapien sagittis non sociis ligula penatibus\n            dignissim vitae, enim vulputate nullam semper potenti etiam volutpat libero.\n            <button>Cool</button>\n          </div>\n        </div>\n      </div>`,\n  }),\n}"
                }
            ],
            "radian/hover-card/hover-card.stories.ts": [
                {
                    "name": "arrowClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"padding: 50px; display: flex; justify-content: center\">\n      <div radianHoverCard>\n        <a radianHoverCardTrigger href=\"/\" class=\"${triggerClasses}\">\n          trigger\n        </a>\n        <div *radianHoverCardPresence radianHoverCardPortal>\n          <div radianHoverCardPanel>\n            <div radianHoverCardContent class=\"${contentClasses}\" sideOffset=\"5\">\n              <radian-arrow radianHoverCardArrow class=\"${arrowClasses}\" width=\"20\" height=\"10\" />\n              ${content}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "ContainedTextSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n    <div style=\"padding: 50px; display: flex; justify-content: center\">\n      <div radianHoverCard>\n        <a radianHoverCardTrigger href=\"/\" class=\"${triggerClasses}\">\n          trigger\n        </a>\n        <div *radianHoverCardPresence radianHoverCardPortal>\n          <div radianHoverCardPanel>\n            <div radianHoverCardContent class=\"${contentClasses}\" sideOffset=\"5\">\n              <radian-arrow radianHoverCardArrow class=\"${arrowClasses}\" width=\"20\" height=\"10\" />\n              <div style=\"max-width: 400px\">\n                Text selections will be contained within the content. While a selection is active\n                the content will not dismiss unless the selection is cleared or an outside\n                interaction is performed.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "content",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<div style=\"max-width: 400px; display: flex; align-items: center\">\n      <div style=\"width: 60px; height: 60px; background-color: red; border-radius: 100px\"></div>\n      <div style=\"margin-left: 14px\">\n        <div style=\"width: 200px; background-color: red; height: 14px; border-radius: 100px\"></div>\n        <div\n          style=\"width: 150px; background-color: red; height: 14px; border-radius: 100px; marginTop: 10px;\"\n        ></div>\n      </div>\n    </div>`"
                },
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianHoverCard>",
                    "defaultValue": "{\n  title: 'Hover Card',\n  component: RadianHoverCard,\n  subcomponents: {\n    RadianHoverCardArrow,\n    RadianHoverCardContent,\n    RadianHoverCardPanel,\n    RadianHoverCardPortal,\n    RadianHoverCardPresence,\n    RadianHoverCardTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianHoverCardArrow,\n        RadianHoverCardContent,\n        RadianHoverCardPanel,\n        RadianHoverCardPortal,\n        RadianHoverCardPresence,\n        RadianHoverCardTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                }
            ],
            "radian/avatar/avatar.stories.ts": [
                {
                    "name": "avatarClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'inline-flex items-center justify-center align-middle overflow-hidden select-none rounded-full w-12 h-12'"
                },
                {
                    "name": "BrokenImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'With Broken Image',\n  render: () => ({\n    template: `\n    <div radianAvatar class=\"${avatarClasses}\">\n      <img radianAvatarImage class=\"${imageClasses}\" alt=\"John Smith\" src=\"${srcBroken}\" />\n      <div *radianAvatarFallback class=\"${fallbackClasses}\">\n        JS\n      </div>\n    </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "fallbackClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'w-full h-full flex items-center justify-center bg-gray-500 text-black'"
                },
                {
                    "name": "imageClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'w-full h-full object-cover'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianAvatar>",
                    "defaultValue": "{\n  title: 'Avatar',\n  component: RadianAvatar,\n  subcomponents: {\n    RadianAvatarFallback,\n    RadianAvatarImage,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAvatarFallback, RadianAvatarImage],\n    }),\n  ],\n}"
                },
                {
                    "name": "src",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://picsum.photos/id/1005/400/400'"
                },
                {
                    "name": "srcBroken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://broken.link.com/broken-pic.jpg'"
                },
                {
                    "name": "WorkingImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  name: 'With Working Image',\n  render: () => ({\n    template: `\n    <div radianAvatar class=\"${avatarClasses}\">\n      <img radianAvatarImage class=\"${imageClasses}\" alt=\"John Smith\" src=\"${src}\" />\n      <div *radianAvatarFallback delayMs=\"300\" class=\"${fallbackClasses}\">\n        JS\n      </div>\n    </div>\n    `,\n  }),\n}"
                }
            ],
            "radian/collapsible/collapsible.stories.ts": [
                {
                    "name": "collapsibleClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t border-b'"
                },
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t'"
                },
                {
                    "name": "Controlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <div radianCollapsible class=\"${collapsibleClasses}\" [(open)]=\"open\">\n        <button radianCollapsibleTrigger class=\"${triggerClasses}\">Trigger</button>\n        <div class=\"${contentClasses}\" *radianCollapsiblePresence radianCollapsibleContent>\n          Content\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianCollapsible>",
                    "defaultValue": "{\n  title: 'Collapsible',\n  component: RadianCollapsible,\n  subcomponents: {\n    RadianCollapsibleContent,\n    RadianCollapsiblePresence,\n    RadianCollapsibleTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianCollapsibleContent,\n        RadianCollapsiblePresence,\n        RadianCollapsibleTrigger,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex flex-1 items-start justify-between gap-4 py-4 text-left text-sm font-medium outline-none hover:underline disabled:pointer-events-none disabled:opacity-50'"
                },
                {
                    "name": "Uncontrolled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div radianCollapsible class=\"${collapsibleClasses}\">\n        <button radianCollapsibleTrigger class=\"${triggerClasses}\">Trigger</button>\n        <div class=\"${contentClasses}\" *radianCollapsiblePresence radianCollapsibleContent>\n          Content\n        </div>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "radian/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: [\n    '@storybook/addon-docs',\n    {\n      name: '@storybook/addon-styling-webpack',\n      options: {\n        rules: [\n          // Replaces existing CSS rules to support PostCSS\n          {\n            test: /\\.css$/,\n            use: [\n              'style-loader',\n              {\n                loader: 'css-loader',\n                options: { importLoaders: 1 },\n              },\n              {\n                // Gets options from `postcss.config.js` in your project root\n                loader: 'postcss-loader',\n                options: { implementation: require.resolve('postcss') },\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n}"
                }
            ],
            "radian/alert-dialog/alert-dialog.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg sm:max-w-lg'"
                },
                {
                    "name": "Controlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <button type=\"button\" (click)=\"open.set(!open())\">Delete</button>\n\n      <ng-container radianAlertDialog [(open)]=\"open\">\n        <div *radianAlertDialogPresence radianAlertDialogPortal>\n          <div class=\"${overlayClasses}\" radianAlertDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianAlertDialogContent>\n            <h3 radianAlertDialogTitle>Are you sure?</h3>\n            <p radianAlertDialogDescription>There is no going back!</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianAlertDialogAction>Delete</button>\n              <button radianAlertDialogCancel>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
                },
                {
                    "name": "footerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex gap-2 justify-end'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianAlertDialog>",
                    "defaultValue": "{\n  title: 'Alert Dialog',\n  component: RadianAlertDialog,\n  subcomponents: {\n    RadianAlertDialogAction,\n    RadianAlertDialogCancel,\n    RadianAlertDialogContent,\n    RadianAlertDialogDescription,\n    RadianAlertDialogOverlay,\n    RadianAlertDialogPortal,\n    RadianAlertDialogPresence,\n    RadianAlertDialogTitle,\n    RadianAlertDialogTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianAlertDialogAction,\n        RadianAlertDialogCancel,\n        RadianAlertDialogContent,\n        RadianAlertDialogDescription,\n        RadianAlertDialogOverlay,\n        RadianAlertDialogPortal,\n        RadianAlertDialogPresence,\n        RadianAlertDialogTitle,\n        RadianAlertDialogTrigger,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "overlayClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'fixed inset-0 z-10 bg-black/50'"
                },
                {
                    "name": "Uncontrolled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: () => ({\n    template: `\n      <ng-container radianAlertDialog>\n        <button radianAlertDialogTrigger>Delete</button>\n\n        <div *radianAlertDialogPresence radianAlertDialogPortal>\n          <div class=\"${overlayClasses}\" radianAlertDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianAlertDialogContent>\n            <h3 radianAlertDialogTitle>Are you sure?</h3>\n            <p radianAlertDialogDescription>There is no going back!</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianAlertDialogAction>Delete</button>\n              <button radianAlertDialogCancel>Cancel</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
                }
            ],
            "radian/context-menu/context-menu.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white border border-black'"
                },
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianContextMenu>\n        <div class=\"${triggerClasses}\" radianContextMenuTrigger></div>\n\n        <div *radianContextMenuPresence radianContextMenuPortal>\n          <div radianContextMenuPanel>\n            <div radianContextMenuContent class=\"${contentClasses}\">\n              <div radianContextMenuGroup>\n                <div radianContextMenuLabel class=\"${labelClasses}\">Actions</div>\n                <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Undo\n                </div>\n                <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Redo\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextSubMenu>\n                <div radianContextSubMenuTrigger>Submenu →</div>\n                <div *radianContextMenuPresence>\n                  <div radianContextSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                    <div radianContextSubMenuContent class=\"${contentClasses}\">\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                      <div radianContextMenuItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextMenuItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n              <div radianContextMenuCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                Active\n                <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                </div>\n              </div>\n              <div radianContextMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianContextMenuRadioGroup [(value)]=\"selection\">\n                <div radianContextMenuLabel class=\"${labelClasses}\">Selection</div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"first\">\n                  First\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"second\">\n                  Second\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianContextMenuRadioItem class=\"${itemClasses}\" value=\"third\">\n                  Third\n                  <div *radianContextMenuItemIndicatorPresence radianContextMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "itemClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
                },
                {
                    "name": "labelClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'text-sm text-gray-700'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianContextMenu>",
                    "defaultValue": "{\n  title: 'Context Menu',\n  component: RadianContextMenu,\n  subcomponents: {\n    RadianContextMenuArrow,\n    RadianContextMenuCheckboxItem,\n    RadianContextMenuContent,\n    RadianContextMenuGroup,\n    RadianContextMenuItem,\n    RadianContextMenuItemIndicator,\n    RadianContextMenuItemIndicatorPresence,\n    RadianContextMenuLabel,\n    RadianContextMenuPanel,\n    RadianContextMenuPortal,\n    RadianContextMenuPresence,\n    RadianContextMenuRadioGroup,\n    RadianContextMenuRadioItem,\n    RadianContextMenuSeparator,\n    RadianContextMenuTrigger,\n    RadianContextSubMenu,\n    RadianContextSubMenuContent,\n    RadianContextSubMenuPanel,\n    RadianContextSubMenuTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianContextMenuArrow,\n        RadianContextMenuCheckboxItem,\n        RadianContextMenuContent,\n        RadianContextMenuGroup,\n        RadianContextMenuItem,\n        RadianContextMenuItemIndicator,\n        RadianContextMenuItemIndicatorPresence,\n        RadianContextMenuLabel,\n        RadianContextMenuPanel,\n        RadianContextMenuPortal,\n        RadianContextMenuPresence,\n        RadianContextMenuRadioGroup,\n        RadianContextMenuRadioItem,\n        RadianContextMenuSeparator,\n        RadianContextMenuTrigger,\n        RadianContextSubMenu,\n        RadianContextSubMenuContent,\n        RadianContextSubMenuPanel,\n        RadianContextSubMenuTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "separatorClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t border-black my-2'"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'w-8 h-8 border border-black'"
                }
            ],
            "radian/dialog/dialog.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg sm:max-w-lg'"
                },
                {
                    "name": "Controlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      open: signal(true),\n    },\n    template: `\n      <button type=\"button\" (click)=\"open.set(!open())\">Delete</button>\n\n      <ng-container radianDialog [(open)]=\"open\">\n        <div *radianDialogPresence radianDialogPortal>\n          <div class=\"${overlayClasses}\" radianDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianDialogContent>\n            <h3 radianDialogTitle>This is a dialog</h3>\n            <p radianDialogDescription>It is very useful.</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianDialogClose>Close</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
                },
                {
                    "name": "footerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex gap-2 justify-end'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianDialog>",
                    "defaultValue": "{\n  title: ' Dialog',\n  component: RadianDialog,\n  subcomponents: {\n    RadianDialogClose,\n    RadianDialogContent,\n    RadianDialogDescription,\n    RadianDialogOverlay,\n    RadianDialogPortal,\n    RadianDialogPresence,\n    RadianDialogTitle,\n    RadianDialogTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianDialogClose,\n        RadianDialogContent,\n        RadianDialogDescription,\n        RadianDialogOverlay,\n        RadianDialogPortal,\n        RadianDialogPresence,\n        RadianDialogTitle,\n        RadianDialogTrigger,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "overlayClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'fixed inset-0 z-10 bg-black/50'"
                },
                {
                    "name": "Uncontrolled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: () => ({\n    template: `\n      <ng-container radianDialog>\n        <button radianDialogTrigger>Open</button>\n\n        <div *radianDialogPresence radianDialogPortal>\n          <div class=\"${overlayClasses}\" radianDialogOverlay></div>\n\n          <div class=\"${contentClasses}\" radianDialogContent>\n            <h3 radianDialogTitle>This is a dialog</h3>\n            <p radianDialogDescription>It is very useful.</p>\n\n            <div class=\"${footerClasses}\">\n              <button radianDialogClose>Close</button>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    `,\n  }),\n}"
                }
            ],
            "radian/dropdown-menu/dropdown-menu.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white border border-black'"
                },
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianDropdownMenu>\n        <button class=\"${triggerClasses}\" radianDropdownMenuTrigger>Menu</button>\n\n        <div *radianDropdownMenuPresence radianDropdownMenuPortal>\n          <div radianDropdownMenuPanel>\n            <div radianDropdownMenuContent class=\"${contentClasses}\">\n              <div radianDropdownMenuGroup>\n                <div radianDropdownMenuLabel class=\"${labelClasses}\">Actions</div>\n                <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Undo\n                </div>\n                <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                  Redo\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownSubMenu>\n                <div radianDropdownSubMenuTrigger>Submenu →</div>\n                <div *radianDropdownMenuPresence>\n                  <div radianDropdownSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                    <div radianDropdownSubMenuContent class=\"${contentClasses}\">\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                      <div radianDropdownMenuItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownMenuItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n              <div radianDropdownMenuCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                Active\n                <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                </div>\n              </div>\n              <div radianDropdownMenuSeparator class=\"${separatorClasses}\"></div>\n              <div radianDropdownMenuRadioGroup [(value)]=\"selection\">\n                <div radianDropdownMenuLabel class=\"${labelClasses}\">Selection</div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"first\">\n                  First\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"second\">\n                  Second\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n                <div radianDropdownMenuRadioItem class=\"${itemClasses}\" value=\"third\">\n                  Third\n                  <div *radianDropdownMenuItemIndicatorPresence radianDropdownMenuItemIndicator>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 32 32\"\n                      width=\"12\"\n                      height=\"12\"\n                      fill=\"none\"\n                      stroke=\"currentcolor\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"3\"\n                    >\n                      <path d=\"M2 20 L12 28 30 4\" />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "itemClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
                },
                {
                    "name": "labelClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'text-sm text-gray-700'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianDropdownMenu>",
                    "defaultValue": "{\n  title: 'Dropdown Menu',\n  component: RadianDropdownMenu,\n  subcomponents: {\n    RadianDropdownMenuArrow,\n    RadianDropdownMenuCheckboxItem,\n    RadianDropdownMenuContent,\n    RadianDropdownMenuGroup,\n    RadianDropdownMenuItem,\n    RadianDropdownMenuItemIndicator,\n    RadianDropdownMenuItemIndicatorPresence,\n    RadianDropdownMenuLabel,\n    RadianDropdownMenuPanel,\n    RadianDropdownMenuPortal,\n    RadianDropdownMenuPresence,\n    RadianDropdownMenuRadioGroup,\n    RadianDropdownMenuRadioItem,\n    RadianDropdownMenuSeparator,\n    RadianDropdownMenuTrigger,\n    RadianDropdownSubMenu,\n    RadianDropdownSubMenuContent,\n    RadianDropdownSubMenuPanel,\n    RadianDropdownSubMenuTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianDropdownMenuArrow,\n        RadianDropdownMenuCheckboxItem,\n        RadianDropdownMenuContent,\n        RadianDropdownMenuGroup,\n        RadianDropdownMenuItem,\n        RadianDropdownMenuItemIndicator,\n        RadianDropdownMenuItemIndicatorPresence,\n        RadianDropdownMenuLabel,\n        RadianDropdownMenuPanel,\n        RadianDropdownMenuPortal,\n        RadianDropdownMenuPresence,\n        RadianDropdownMenuRadioGroup,\n        RadianDropdownMenuRadioItem,\n        RadianDropdownMenuSeparator,\n        RadianDropdownMenuTrigger,\n        RadianDropdownSubMenu,\n        RadianDropdownSubMenuContent,\n        RadianDropdownSubMenuPanel,\n        RadianDropdownSubMenuTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "separatorClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t border-black my-2'"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                }
            ],
            "radian/menubar/menubar.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white border border-black'"
                },
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div class=\"flex gap-2\" radianMenubar>\n        <div radianMenubarMenu>\n          <button class=\"${triggerClasses}\" radianMenubarTrigger>Menu</button>\n\n          <div *radianMenubarPresence radianMenubarPortal>\n            <div radianMenubarPanel>\n              <div radianMenubarContent class=\"${contentClasses}\">\n                <div radianMenubarGroup>\n                  <div radianMenubarLabel class=\"${labelClasses}\">Actions</div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Undo\n                  </div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Redo\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarSubMenu>\n                  <div radianMenubarSubMenuTrigger>Submenu →</div>\n                  <div *radianMenubarPresence>\n                    <div radianMenubarSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                      <div radianMenubarSubMenuContent class=\"${contentClasses}\">\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n                <div radianMenubarCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                  Active\n                  <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarRadioGroup [(value)]=\"selection\">\n                  <div radianMenubarLabel class=\"${labelClasses}\">Selection</div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"first\">\n                    First\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"second\">\n                    Second\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"third\">\n                    Third\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div radianMenubarMenu>\n          <button class=\"${triggerClasses}\" radianMenubarTrigger>Menu</button>\n\n          <div *radianMenubarPresence radianMenubarPortal>\n            <div radianMenubarPanel>\n              <div radianMenubarContent class=\"${contentClasses}\">\n                <div radianMenubarGroup>\n                  <div radianMenubarLabel class=\"${labelClasses}\">Actions</div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Undo\n                  </div>\n                  <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('undo')\">\n                    Redo\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarSubMenu>\n                  <div radianMenubarSubMenuTrigger>Submenu →</div>\n                  <div *radianMenubarPresence>\n                    <div radianMenubarSubMenuPanel sideOffset=\"12\" alignOffset=\"-6\">\n                      <div radianMenubarSubMenuContent class=\"${contentClasses}\">\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('one')\">One</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('two')\">Two</div>\n                        <div radianMenubarItem class=\"${itemClasses}\" (select)=\"log('three')\">Three</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarItem class=\"${itemClasses}\" disabled (select)=\"log('four')\">Four</div>\n                <div radianMenubarCheckboxItem class=\"${itemClasses}\" [(checked)]=\"active\">\n                  Active\n                  <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                  </div>\n                </div>\n                <div radianMenubarSeparator class=\"${separatorClasses}\"></div>\n                <div radianMenubarRadioGroup [(value)]=\"selection\">\n                  <div radianMenubarLabel class=\"${labelClasses}\">Selection</div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"first\">\n                    First\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"second\">\n                    Second\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                  <div radianMenubarRadioItem class=\"${itemClasses}\" value=\"third\">\n                    Third\n                    <div *radianMenubarItemIndicatorPresence radianMenubarItemIndicator>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 32 32\"\n                        width=\"12\"\n                        height=\"12\"\n                        fill=\"none\"\n                        stroke=\"currentcolor\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth=\"3\"\n                      >\n                        <path d=\"M2 20 L12 28 30 4\" />\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "itemClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
                },
                {
                    "name": "labelClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'text-sm text-gray-700'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianMenubar>",
                    "defaultValue": "{\n  title: 'Menubar',\n  component: RadianMenubar,\n  subcomponents: {\n    RadianMenubarArrow,\n    RadianMenubarCheckboxItem,\n    RadianMenubarContent,\n    RadianMenubarGroup,\n    RadianMenubarItem,\n    RadianMenubarItemIndicator,\n    RadianMenubarItemIndicatorPresence,\n    RadianMenubarLabel,\n    RadianMenubarMenu,\n    RadianMenubarPanel,\n    RadianMenubarPortal,\n    RadianMenubarPresence,\n    RadianMenubarRadioGroup,\n    RadianMenubarRadioItem,\n    RadianMenubarSeparator,\n    RadianMenubarSubMenu,\n    RadianMenubarSubMenuContent,\n    RadianMenubarSubMenuPanel,\n    RadianMenubarSubMenuTrigger,\n    RadianMenubarTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianMenubarArrow,\n        RadianMenubarCheckboxItem,\n        RadianMenubarContent,\n        RadianMenubarGroup,\n        RadianMenubarItem,\n        RadianMenubarItemIndicator,\n        RadianMenubarItemIndicatorPresence,\n        RadianMenubarLabel,\n        RadianMenubarMenu,\n        RadianMenubarPanel,\n        RadianMenubarPortal,\n        RadianMenubarPresence,\n        RadianMenubarRadioGroup,\n        RadianMenubarRadioItem,\n        RadianMenubarSeparator,\n        RadianMenubarSubMenu,\n        RadianMenubarSubMenuContent,\n        RadianMenubarSubMenuPanel,\n        RadianMenubarSubMenuTrigger,\n        RadianMenubarTrigger,\n        RadianArrow,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "separatorClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t border-black my-2'"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                }
            ],
            "radian/navigation-menu/navigation-menu.stories.ts": [
                {
                    "name": "contentClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-white border border-black'"
                },
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      log: (v: unknown) => console.log(v),\n      active: signal(false),\n      selection: signal('first'),\n    },\n    template: `\n      <div radianNavigationMenu>\n        <div radianNavigationMenuList>\n          <div radianNavigationMenuItem>\n            <div radianNavigationMenuTrigger>Links</div>\n            <div *radianNavigationMenuContentPresence>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "itemClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'flex items-center justify-between hover:bg-gray-100 data-disabled:opacity-65 hover:data-disabled:bg-transparent'"
                },
                {
                    "name": "labelClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'text-sm text-gray-700'"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianNavigationMenu>",
                    "defaultValue": "{\n  title: 'Navigation Menu',\n  component: RadianNavigationMenu,\n  subcomponents: {\n    RadianNavigationMenuContent,\n    RadianNavigationMenuContentPresence,\n    RadianNavigationMenuIndicator,\n    RadianNavigationMenuIndicatorPresence,\n    RadianNavigationMenuItem,\n    RadianNavigationMenuLink,\n    RadianNavigationMenuList,\n    RadianNavigationMenuSub,\n    RadianNavigationMenuTrack,\n    RadianNavigationMenuTrigger,\n    RadianNavigationMenuViewport,\n    RadianNavigationMenuViewportOutlet,\n    RadianNavigationMenuViewportPortal,\n    RadianNavigationMenuViewportPresence,\n    RadianNavigationMenuViewportProxy,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianNavigationMenuContent,\n        RadianNavigationMenuContentPresence,\n        RadianNavigationMenuIndicator,\n        RadianNavigationMenuIndicatorPresence,\n        RadianNavigationMenuItem,\n        RadianNavigationMenuLink,\n        RadianNavigationMenuList,\n        RadianNavigationMenuSub,\n        RadianNavigationMenuTrack,\n        RadianNavigationMenuTrigger,\n        RadianNavigationMenuViewport,\n        RadianNavigationMenuViewportOutlet,\n        RadianNavigationMenuViewportPortal,\n        RadianNavigationMenuViewportPresence,\n        RadianNavigationMenuViewportProxy,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "separatorClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'border-t border-black my-2'"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "''"
                }
            ],
            "radian/checkbox/checkbox.stories.ts": [
                {
                    "name": "Controlled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      checked: signal(true),\n    },\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox [(checked)]=\"checked\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
                },
                {
                    "name": "Forms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      checked: signal(true),\n    },\n    moduleMetadata: { imports: [FormsModule] },\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox [ngModel]=\"checked()\" (ngModelChange)=\"checked.set($event)\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox checked=\"indeterminate\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
                },
                {
                    "name": "indicatorClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'bg-pink-500 block w-full h-1 data-[state=checked]:h-full'"
                },
                {
                    "name": "InsideLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <label class=\"inline-flex gap-2\">\n        Label\n        <div radianCheckbox>\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger>\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n      </label>\n    `,\n  }),\n}"
                },
                {
                    "name": "LabelFor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <label for=\"check\">\n        Label\n      </label>\n\n        <div radianCheckbox class=\"ml-2 inline-block\">\n          <button class=\"${triggerClasses}\" radianCheckboxTrigger id=\"check\">\n            <div class=\"${indicatorClasses}\" *radianCheckboxIndicatorPresence radianCheckboxIndicator></div>\n          </button>\n\n          <input radianCheckboxInput />\n        </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianCheckbox>",
                    "defaultValue": "{\n  title: 'Checkbox',\n  component: RadianCheckbox,\n  subcomponents: {\n    RadianCheckboxIndicator,\n    RadianCheckboxIndicatorPresence,\n    RadianCheckboxInput,\n    RadianCheckboxTrigger,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        RadianCheckboxIndicator,\n        RadianCheckboxIndicatorPresence,\n        RadianCheckboxInput,\n        RadianCheckboxTrigger,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "triggerClasses",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'align-middle border border-black w-8 h-8 p-1 data-disabled:opacity-30 focus:outline-none focus:border-pink-500'"
                }
            ],
            "radian/arrow/arrow.stories.ts": [
                {
                    "name": "Custom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/arrow/arrow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <radian-arrow>\n            <div\n              style=\"width: 20px; height: 10px; borderBottomLeftRadius: 10px; borderBottomRightRadius: 10px; backgroundColor: tomato\"\n            ></div>\n      </radian-arrow>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/arrow/arrow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianArrow>",
                    "defaultValue": "{\n  title: 'Arrow',\n  component: RadianArrow,\n  tags: ['autodocs'],\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/arrow/arrow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div class=\"flex gap-4\">\n        <radian-arrow style=\"vertical-align: middle\" width=\"40\" height=\"10\" />\n        <radian-arrow style=\"vertical-align: middle\" width=\"50\" height=\"30\" />\n        <radian-arrow style=\"vertical-align: middle\" width=\"20\" height=\"100\" />\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Styled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/arrow/arrow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <radian-arrow style=\"vertical-align: middle; fill: crimson\" width=\"20\" height=\"10\" />\n    `,\n  }),\n}"
                }
            ],
            "radian/aspect-ratio/aspect-ratio.stories.ts": [
                {
                    "name": "CustomRatios",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n          <div class=\"flex gap-6\">\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"1 / 2\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"16 / 9\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n            <div style=\"width: 200px\">\n              <div radianAspectRatio [ratio]=\"2 / 1\"><div radianAspectRatioContent>${image}</div></div>\n            </div>\n          </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"width: 500px\">\n        <div radianAspectRatio>\n          <div radianAspectRatioContent class=\"flex items-center justify-center bg-red-500 text-white\">\n            <h1>Default ratio (1/1)</h1>\n          </div>\n        </div>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "image",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`<img\n    src=\"https://images.unsplash.com/photo-1605030753481-bb38b08c384a?&auto=format&fit=crop&w=400&q=80\"\n    alt=\"A house in a forest\"\n    style=\"object-fit: cover; width: 100%; height: 100%\"\n  />`"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianAspectRatio>",
                    "defaultValue": "{\n  title: 'Aspect Ratio',\n  component: RadianAspectRatio,\n  subcomponents: {\n    RadianAspectRatioContent,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAspectRatioContent],\n    }),\n  ],\n}"
                }
            ],
            "radian/accessible-icon/accessible-icon.stories.ts": [
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accessible-icon/accessible-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  tags: ['!dev'],\n  render: () => ({\n    template: `\n    <button type=\"button\">\n      <svg dataRadianAccessibleIcon viewBox=\"0 0 32 32\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\">\n        <path d=\"M2 30 L30 2 M30 30 L2 2\" />\n      </svg>\n      <div radianAccessibleIconLabel>Close</div>\n    </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/accessible-icon/accessible-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianAccessibleIcon>",
                    "defaultValue": "{\n  title: 'Accessible Icon',\n  component: RadianAccessibleIcon,\n  subcomponents: {\n    RadianAccessibleIconLabel,\n  },\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [RadianAccessibleIconLabel],\n    }),\n  ],\n}"
                }
            ],
            "radian/label/label.stories.ts": [
                {
                    "name": "Demo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/label/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  tags: ['!dev'],\n  render: () => ({\n    template: `\n      <label radianLabel class=\"flex gap-2\">\n        Label\n        <input class=\"border border-black\" />\n      </label>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/label/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadianLabel>",
                    "defaultValue": "{\n  title: 'Label',\n  component: RadianLabel,\n  tags: ['autodocs'],\n}"
                }
            ],
            "radian/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "radian/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {},\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "radian/accessible-icon/accessible-icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianAccessibleIcon>",
                    "file": "radian/accessible-icon/accessible-icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/accordion/accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianAccordion>",
                    "file": "radian/accordion/accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/alert-dialog/alert-dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianAlertDialog>",
                    "file": "radian/alert-dialog/alert-dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/arrow/arrow.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianArrow>",
                    "file": "radian/arrow/arrow.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/aspect-ratio/aspect-ratio.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianAspectRatio>",
                    "file": "radian/aspect-ratio/aspect-ratio.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/avatar/avatar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianAvatar>",
                    "file": "radian/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianCheckbox>",
                    "file": "radian/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/collapsible/collapsible.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianCollapsible>",
                    "file": "radian/collapsible/collapsible.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/context-menu/context-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianContextMenu>",
                    "file": "radian/context-menu/context-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/dialog/dialog.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianDialog>",
                    "file": "radian/dialog/dialog.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/dropdown-menu/dropdown-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianDropdownMenu>",
                    "file": "radian/dropdown-menu/dropdown-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/hover-card/hover-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianHoverCard>",
                    "file": "radian/hover-card/hover-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/label/label.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianLabel>",
                    "file": "radian/label/label.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/menubar/menubar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianMenubar>",
                    "file": "radian/menubar/menubar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "radian/navigation-menu/navigation-menu.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadianNavigationMenu>",
                    "file": "radian/navigation-menu/navigation-menu.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "radian/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accessible-icon/accessible-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accessible-icon/accessible-icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accessible-icon/accessible-icon.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accordionHeaderClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accordionItemClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "accordionTriggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleControlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleUncontrolled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleCollapsible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleControlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleUncontrolled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/accordion/accordion.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Controlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "footerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "overlayClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Uncontrolled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/alert-dialog/alert-dialog.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/arrow/arrow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Custom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/arrow/arrow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/arrow/arrow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/arrow/arrow.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Styled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/arrow/arrow.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomRatios",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "image",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/aspect-ratio/aspect-ratio.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "avatarClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BrokenImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fallbackClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "imageClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "src",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "srcBroken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WorkingImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/avatar/avatar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Controlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Forms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "indicatorClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InsideLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LabelFor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/checkbox/checkbox.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "collapsibleClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Controlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Uncontrolled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/collapsible/collapsible.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "labelClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "separatorClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/context-menu/context-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Controlled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "footerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "overlayClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Uncontrolled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dialog/dialog.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "labelClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "separatorClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/dropdown-menu/dropdown-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "arrowClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContainedTextSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "content",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/hover-card/hover-card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/label/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/label/label.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/label/label.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "labelClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "separatorClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/menubar/menubar.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "contentClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Demo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "itemClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "labelClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "separatorClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "triggerClasses",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "radian/navigation-menu/navigation-menu.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}